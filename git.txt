# Terminal Commands

1. **cls**
   - Clears the screen in the command prompt or terminal.
   - Linux Equivalent: `clear`

2. **dir**
   - Lists all directories and files in the current directory.
   - Linux Equivalent: `ls`

3. **cd**
   - Changes the current directory.
   - Example: `cd <directory name>`

4. **cd ..**
   - Moves up one directory level (absolute path).

5. **cd <do> and tab**
   - Auto-completes directory or file names. Press tab again to cycle through options.

6. **d: or ...**
   - Changes the current drive or directory.

# Git

## Per Project One Time Setup

1. **git init**
   - Initializes Git in your project directory.

2. **git remote add origin <git-repo-url>**
   - Links your local repository to a remote repository on GitHub.
   - Check setup: `git remote -v`

## Everyday Commands

- **git status**
  - Shows the status of changes between your local and remote repositories.
    - `U` indicates untracked files or new files.
    - `M` indicates modified code in existing files.

## Cloning a Repo

- **git clone <URL>**
  - Copies a repository from a remote source (like GitHub) to your local machine.

## Push

1. **git add .**
   - Adds all modified and new files to the staging area for the next commit.
     - Use `git add <file name>` to add specific files.

2. **git commit -m "<message>"**
   - Commits the staged changes with a descriptive message.

3. **git push**
   - Pushes committed changes from your local repository to the remote repository.
     - For the master branch: `git push --set-upstream origin master`
     - To push to a specific branch: `git push origin <branch_name>`
